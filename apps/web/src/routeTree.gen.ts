/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as PricingRouteImport } from './routes/pricing'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthedRouteImport } from './routes/_authed'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthedSettingsIndexRouteImport } from './routes/_authed/settings.index'
import { Route as AuthedDashboardIndexRouteImport } from './routes/_authed/dashboard.index'
import { Route as AuthedSettingsApiKeysRouteImport } from './routes/_authed/settings.api-keys'
import { Route as AuthedRunsIdRouteImport } from './routes/_authed/runs.$id'
import { Route as AuthedJobsNewRouteImport } from './routes/_authed/jobs.new'
import { Route as AuthedJobsIdIndexRouteImport } from './routes/_authed/jobs.$id.index'
import { Route as AuthedJobsIdEditRouteImport } from './routes/_authed/jobs.$id.edit'
import { Route as AuthedEndpointsIdRunsRouteImport } from './routes/_authed/endpoints.$id.runs'
import { Route as AuthedEndpointsIdHealthRouteImport } from './routes/_authed/endpoints.$id.health'
import { Route as AuthedJobsJobIdEndpointsNewRouteImport } from './routes/_authed/jobs.$jobId.endpoints.new'
import { Route as AuthedJobsJobIdEndpointsIdEditRouteImport } from './routes/_authed/jobs.$jobId.endpoints.$id.edit'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const PricingRoute = PricingRouteImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedRoute = AuthedRouteImport.update({
  id: '/_authed',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedSettingsIndexRoute = AuthedSettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedDashboardIndexRoute = AuthedDashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedSettingsApiKeysRoute = AuthedSettingsApiKeysRouteImport.update({
  id: '/settings/api-keys',
  path: '/settings/api-keys',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedRunsIdRoute = AuthedRunsIdRouteImport.update({
  id: '/runs/$id',
  path: '/runs/$id',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedJobsNewRoute = AuthedJobsNewRouteImport.update({
  id: '/jobs/new',
  path: '/jobs/new',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedJobsIdIndexRoute = AuthedJobsIdIndexRouteImport.update({
  id: '/jobs/$id/',
  path: '/jobs/$id/',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedJobsIdEditRoute = AuthedJobsIdEditRouteImport.update({
  id: '/jobs/$id/edit',
  path: '/jobs/$id/edit',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedEndpointsIdRunsRoute = AuthedEndpointsIdRunsRouteImport.update({
  id: '/endpoints/$id/runs',
  path: '/endpoints/$id/runs',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedEndpointsIdHealthRoute = AuthedEndpointsIdHealthRouteImport.update({
  id: '/endpoints/$id/health',
  path: '/endpoints/$id/health',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedJobsJobIdEndpointsNewRoute =
  AuthedJobsJobIdEndpointsNewRouteImport.update({
    id: '/jobs/$jobId/endpoints/new',
    path: '/jobs/$jobId/endpoints/new',
    getParentRoute: () => AuthedRoute,
  } as any)
const AuthedJobsJobIdEndpointsIdEditRoute =
  AuthedJobsJobIdEndpointsIdEditRouteImport.update({
    id: '/jobs/$jobId/endpoints/$id/edit',
    path: '/jobs/$jobId/endpoints/$id/edit',
    getParentRoute: () => AuthedRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/pricing': typeof PricingRoute
  '/register': typeof RegisterRoute
  '/jobs/new': typeof AuthedJobsNewRoute
  '/runs/$id': typeof AuthedRunsIdRoute
  '/settings/api-keys': typeof AuthedSettingsApiKeysRoute
  '/dashboard': typeof AuthedDashboardIndexRoute
  '/settings': typeof AuthedSettingsIndexRoute
  '/endpoints/$id/health': typeof AuthedEndpointsIdHealthRoute
  '/endpoints/$id/runs': typeof AuthedEndpointsIdRunsRoute
  '/jobs/$id/edit': typeof AuthedJobsIdEditRoute
  '/jobs/$id': typeof AuthedJobsIdIndexRoute
  '/jobs/$jobId/endpoints/new': typeof AuthedJobsJobIdEndpointsNewRoute
  '/jobs/$jobId/endpoints/$id/edit': typeof AuthedJobsJobIdEndpointsIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/pricing': typeof PricingRoute
  '/register': typeof RegisterRoute
  '/jobs/new': typeof AuthedJobsNewRoute
  '/runs/$id': typeof AuthedRunsIdRoute
  '/settings/api-keys': typeof AuthedSettingsApiKeysRoute
  '/dashboard': typeof AuthedDashboardIndexRoute
  '/settings': typeof AuthedSettingsIndexRoute
  '/endpoints/$id/health': typeof AuthedEndpointsIdHealthRoute
  '/endpoints/$id/runs': typeof AuthedEndpointsIdRunsRoute
  '/jobs/$id/edit': typeof AuthedJobsIdEditRoute
  '/jobs/$id': typeof AuthedJobsIdIndexRoute
  '/jobs/$jobId/endpoints/new': typeof AuthedJobsJobIdEndpointsNewRoute
  '/jobs/$jobId/endpoints/$id/edit': typeof AuthedJobsJobIdEndpointsIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/login': typeof LoginRoute
  '/pricing': typeof PricingRoute
  '/register': typeof RegisterRoute
  '/_authed/jobs/new': typeof AuthedJobsNewRoute
  '/_authed/runs/$id': typeof AuthedRunsIdRoute
  '/_authed/settings/api-keys': typeof AuthedSettingsApiKeysRoute
  '/_authed/dashboard/': typeof AuthedDashboardIndexRoute
  '/_authed/settings/': typeof AuthedSettingsIndexRoute
  '/_authed/endpoints/$id/health': typeof AuthedEndpointsIdHealthRoute
  '/_authed/endpoints/$id/runs': typeof AuthedEndpointsIdRunsRoute
  '/_authed/jobs/$id/edit': typeof AuthedJobsIdEditRoute
  '/_authed/jobs/$id/': typeof AuthedJobsIdIndexRoute
  '/_authed/jobs/$jobId/endpoints/new': typeof AuthedJobsJobIdEndpointsNewRoute
  '/_authed/jobs/$jobId/endpoints/$id/edit': typeof AuthedJobsJobIdEndpointsIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/pricing'
    | '/register'
    | '/jobs/new'
    | '/runs/$id'
    | '/settings/api-keys'
    | '/dashboard'
    | '/settings'
    | '/endpoints/$id/health'
    | '/endpoints/$id/runs'
    | '/jobs/$id/edit'
    | '/jobs/$id'
    | '/jobs/$jobId/endpoints/new'
    | '/jobs/$jobId/endpoints/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/pricing'
    | '/register'
    | '/jobs/new'
    | '/runs/$id'
    | '/settings/api-keys'
    | '/dashboard'
    | '/settings'
    | '/endpoints/$id/health'
    | '/endpoints/$id/runs'
    | '/jobs/$id/edit'
    | '/jobs/$id'
    | '/jobs/$jobId/endpoints/new'
    | '/jobs/$jobId/endpoints/$id/edit'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/login'
    | '/pricing'
    | '/register'
    | '/_authed/jobs/new'
    | '/_authed/runs/$id'
    | '/_authed/settings/api-keys'
    | '/_authed/dashboard/'
    | '/_authed/settings/'
    | '/_authed/endpoints/$id/health'
    | '/_authed/endpoints/$id/runs'
    | '/_authed/jobs/$id/edit'
    | '/_authed/jobs/$id/'
    | '/_authed/jobs/$jobId/endpoints/new'
    | '/_authed/jobs/$jobId/endpoints/$id/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRoute: typeof AuthedRouteWithChildren
  LoginRoute: typeof LoginRoute
  PricingRoute: typeof PricingRoute
  RegisterRoute: typeof RegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/settings/': {
      id: '/_authed/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthedSettingsIndexRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/dashboard/': {
      id: '/_authed/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthedDashboardIndexRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/settings/api-keys': {
      id: '/_authed/settings/api-keys'
      path: '/settings/api-keys'
      fullPath: '/settings/api-keys'
      preLoaderRoute: typeof AuthedSettingsApiKeysRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/runs/$id': {
      id: '/_authed/runs/$id'
      path: '/runs/$id'
      fullPath: '/runs/$id'
      preLoaderRoute: typeof AuthedRunsIdRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/jobs/new': {
      id: '/_authed/jobs/new'
      path: '/jobs/new'
      fullPath: '/jobs/new'
      preLoaderRoute: typeof AuthedJobsNewRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/jobs/$id/': {
      id: '/_authed/jobs/$id/'
      path: '/jobs/$id'
      fullPath: '/jobs/$id'
      preLoaderRoute: typeof AuthedJobsIdIndexRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/jobs/$id/edit': {
      id: '/_authed/jobs/$id/edit'
      path: '/jobs/$id/edit'
      fullPath: '/jobs/$id/edit'
      preLoaderRoute: typeof AuthedJobsIdEditRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/endpoints/$id/runs': {
      id: '/_authed/endpoints/$id/runs'
      path: '/endpoints/$id/runs'
      fullPath: '/endpoints/$id/runs'
      preLoaderRoute: typeof AuthedEndpointsIdRunsRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/endpoints/$id/health': {
      id: '/_authed/endpoints/$id/health'
      path: '/endpoints/$id/health'
      fullPath: '/endpoints/$id/health'
      preLoaderRoute: typeof AuthedEndpointsIdHealthRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/jobs/$jobId/endpoints/new': {
      id: '/_authed/jobs/$jobId/endpoints/new'
      path: '/jobs/$jobId/endpoints/new'
      fullPath: '/jobs/$jobId/endpoints/new'
      preLoaderRoute: typeof AuthedJobsJobIdEndpointsNewRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/jobs/$jobId/endpoints/$id/edit': {
      id: '/_authed/jobs/$jobId/endpoints/$id/edit'
      path: '/jobs/$jobId/endpoints/$id/edit'
      fullPath: '/jobs/$jobId/endpoints/$id/edit'
      preLoaderRoute: typeof AuthedJobsJobIdEndpointsIdEditRouteImport
      parentRoute: typeof AuthedRoute
    }
  }
}

interface AuthedRouteChildren {
  AuthedJobsNewRoute: typeof AuthedJobsNewRoute
  AuthedRunsIdRoute: typeof AuthedRunsIdRoute
  AuthedSettingsApiKeysRoute: typeof AuthedSettingsApiKeysRoute
  AuthedDashboardIndexRoute: typeof AuthedDashboardIndexRoute
  AuthedSettingsIndexRoute: typeof AuthedSettingsIndexRoute
  AuthedEndpointsIdHealthRoute: typeof AuthedEndpointsIdHealthRoute
  AuthedEndpointsIdRunsRoute: typeof AuthedEndpointsIdRunsRoute
  AuthedJobsIdEditRoute: typeof AuthedJobsIdEditRoute
  AuthedJobsIdIndexRoute: typeof AuthedJobsIdIndexRoute
  AuthedJobsJobIdEndpointsNewRoute: typeof AuthedJobsJobIdEndpointsNewRoute
  AuthedJobsJobIdEndpointsIdEditRoute: typeof AuthedJobsJobIdEndpointsIdEditRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedJobsNewRoute: AuthedJobsNewRoute,
  AuthedRunsIdRoute: AuthedRunsIdRoute,
  AuthedSettingsApiKeysRoute: AuthedSettingsApiKeysRoute,
  AuthedDashboardIndexRoute: AuthedDashboardIndexRoute,
  AuthedSettingsIndexRoute: AuthedSettingsIndexRoute,
  AuthedEndpointsIdHealthRoute: AuthedEndpointsIdHealthRoute,
  AuthedEndpointsIdRunsRoute: AuthedEndpointsIdRunsRoute,
  AuthedJobsIdEditRoute: AuthedJobsIdEditRoute,
  AuthedJobsIdIndexRoute: AuthedJobsIdIndexRoute,
  AuthedJobsJobIdEndpointsNewRoute: AuthedJobsJobIdEndpointsNewRoute,
  AuthedJobsJobIdEndpointsIdEditRoute: AuthedJobsJobIdEndpointsIdEditRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRouteWithChildren,
  LoginRoute: LoginRoute,
  PricingRoute: PricingRoute,
  RegisterRoute: RegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
