name: Build and Publish Docker Images

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  REPO_NAME: ${{ github.repository }}

jobs:
  # Build common base layers once
  build-base:
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    permissions:
      contents: read
      packages: write
    
    outputs:
      base-digest: ${{ steps.base.outputs.digest }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and cache the common layers up to 'build' stage
      - name: Build base layers
        id: base
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.monorepo-optimized
          target: build
          push: false
          platforms: linux/amd64
          cache-from: type=gha,scope=monorepo-base
          cache-to: type=gha,mode=max,scope=monorepo-base
          outputs: type=cacheonly

  # Build each service using the cached base
  build-services:
    runs-on: ubuntu-latest
    needs: build-base
    if: github.event_name == 'release'
    permissions:
      contents: read
      packages: write
      
    strategy:
      matrix:
        service:
          - name: api
            target: api
          - name: ai-planner
            target: ai-planner
          - name: scheduler
            target: scheduler
          - name: web
            target: web

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ matrix.service.name }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.monorepo-optimized
          target: ${{ matrix.service.target }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: |
            type=gha,scope=monorepo-base
            type=gha,scope=${{ matrix.service.name }}
          cache-to: type=gha,mode=max,scope=${{ matrix.service.name }}
