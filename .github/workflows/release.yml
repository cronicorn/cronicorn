name: Build and Publish Docker Images

on:
  push:
    tags:
      - "v*"

env:
  REGISTRY: ghcr.io
  REPO_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    strategy:
      matrix:
        service:
          - name: api
            dockerfile: Dockerfile.monorepo-optimized
            context: .
            target: api
          - name: ai-planner
            dockerfile: Dockerfile.monorepo-optimized
            context: .
            target: ai-planner
          - name: scheduler
            dockerfile: Dockerfile.monorepo-optimized
            context: .
            target: scheduler
          - name: web
            dockerfile: Dockerfile.monorepo-optimized
            context: .
            target: web

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ matrix.service.name }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          target: ${{ matrix.service.target }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ matrix.service.name }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
